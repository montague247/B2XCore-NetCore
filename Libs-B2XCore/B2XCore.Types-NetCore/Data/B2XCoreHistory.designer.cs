#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace B2XCore.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="B2XSmartClient_test")]
	public partial class B2XCoreHistoryDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnCreated();
    partial void InsertB2XCoreApplicationHistory(B2XCoreApplicationHistory instance);
    partial void UpdateB2XCoreApplicationHistory(B2XCoreApplicationHistory instance);
    partial void DeleteB2XCoreApplicationHistory(B2XCoreApplicationHistory instance);
    partial void InsertB2XCoreClientHistory(B2XCoreClientHistory instance);
    partial void UpdateB2XCoreClientHistory(B2XCoreClientHistory instance);
    partial void DeleteB2XCoreClientHistory(B2XCoreClientHistory instance);
    partial void InsertB2XCoreClientLanguageHistory(B2XCoreClientLanguageHistory instance);
    partial void UpdateB2XCoreClientLanguageHistory(B2XCoreClientLanguageHistory instance);
    partial void DeleteB2XCoreClientLanguageHistory(B2XCoreClientLanguageHistory instance);
    partial void InsertB2XCoreDomainHistory(B2XCoreDomainHistory instance);
    partial void UpdateB2XCoreDomainHistory(B2XCoreDomainHistory instance);
    partial void DeleteB2XCoreDomainHistory(B2XCoreDomainHistory instance);
    partial void InsertB2XCoreDomainResourceHistory(B2XCoreDomainResourceHistory instance);
    partial void UpdateB2XCoreDomainResourceHistory(B2XCoreDomainResourceHistory instance);
    partial void DeleteB2XCoreDomainResourceHistory(B2XCoreDomainResourceHistory instance);
    partial void InsertB2XCoreGroupHistory(B2XCoreGroupHistory instance);
    partial void UpdateB2XCoreGroupHistory(B2XCoreGroupHistory instance);
    partial void DeleteB2XCoreGroupHistory(B2XCoreGroupHistory instance);
    partial void InsertB2XCoreImplementationHistory(B2XCoreImplementationHistory instance);
    partial void UpdateB2XCoreImplementationHistory(B2XCoreImplementationHistory instance);
    partial void DeleteB2XCoreImplementationHistory(B2XCoreImplementationHistory instance);
    partial void InsertB2XCoreInstanceActivityHistory(B2XCoreInstanceActivityHistory instance);
    partial void UpdateB2XCoreInstanceActivityHistory(B2XCoreInstanceActivityHistory instance);
    partial void DeleteB2XCoreInstanceActivityHistory(B2XCoreInstanceActivityHistory instance);
    partial void InsertB2XCoreInstanceHistory(B2XCoreInstanceHistory instance);
    partial void UpdateB2XCoreInstanceHistory(B2XCoreInstanceHistory instance);
    partial void DeleteB2XCoreInstanceHistory(B2XCoreInstanceHistory instance);
    partial void InsertB2XCoreLanguageHistory(B2XCoreLanguageHistory instance);
    partial void UpdateB2XCoreLanguageHistory(B2XCoreLanguageHistory instance);
    partial void DeleteB2XCoreLanguageHistory(B2XCoreLanguageHistory instance);
    partial void InsertB2XCoreMachineHistory(B2XCoreMachineHistory instance);
    partial void UpdateB2XCoreMachineHistory(B2XCoreMachineHistory instance);
    partial void DeleteB2XCoreMachineHistory(B2XCoreMachineHistory instance);
    partial void InsertB2XCoreResourceHistory(B2XCoreResourceHistory instance);
    partial void UpdateB2XCoreResourceHistory(B2XCoreResourceHistory instance);
    partial void DeleteB2XCoreResourceHistory(B2XCoreResourceHistory instance);
    partial void InsertB2XCoreResourceResourceValueHistory(B2XCoreResourceResourceValueHistory instance);
    partial void UpdateB2XCoreResourceResourceValueHistory(B2XCoreResourceResourceValueHistory instance);
    partial void DeleteB2XCoreResourceResourceValueHistory(B2XCoreResourceResourceValueHistory instance);
    partial void InsertB2XCoreResourceValueHistory(B2XCoreResourceValueHistory instance);
    partial void UpdateB2XCoreResourceValueHistory(B2XCoreResourceValueHistory instance);
    partial void DeleteB2XCoreResourceValueHistory(B2XCoreResourceValueHistory instance);
    partial void InsertB2XCoreSettingDefinitionHistory(B2XCoreSettingDefinitionHistory instance);
    partial void UpdateB2XCoreSettingDefinitionHistory(B2XCoreSettingDefinitionHistory instance);
    partial void DeleteB2XCoreSettingDefinitionHistory(B2XCoreSettingDefinitionHistory instance);
    partial void InsertB2XCoreSettingHistory(B2XCoreSettingHistory instance);
    partial void UpdateB2XCoreSettingHistory(B2XCoreSettingHistory instance);
    partial void DeleteB2XCoreSettingHistory(B2XCoreSettingHistory instance);
    partial void InsertB2XCoreUserDomainResourceHistory(B2XCoreUserDomainResourceHistory instance);
    partial void UpdateB2XCoreUserDomainResourceHistory(B2XCoreUserDomainResourceHistory instance);
    partial void DeleteB2XCoreUserDomainResourceHistory(B2XCoreUserDomainResourceHistory instance);
    partial void InsertB2XCoreUserGroupHistory(B2XCoreUserGroupHistory instance);
    partial void UpdateB2XCoreUserGroupHistory(B2XCoreUserGroupHistory instance);
    partial void DeleteB2XCoreUserGroupHistory(B2XCoreUserGroupHistory instance);
    partial void InsertB2XCoreUserHistory(B2XCoreUserHistory instance);
    partial void UpdateB2XCoreUserHistory(B2XCoreUserHistory instance);
    partial void DeleteB2XCoreUserHistory(B2XCoreUserHistory instance);
    partial void InsertB2XCoreUserPropertyDefinitionHistory(B2XCoreUserPropertyDefinitionHistory instance);
    partial void UpdateB2XCoreUserPropertyDefinitionHistory(B2XCoreUserPropertyDefinitionHistory instance);
    partial void DeleteB2XCoreUserPropertyDefinitionHistory(B2XCoreUserPropertyDefinitionHistory instance);
    partial void InsertB2XCoreUserPropertyHistory(B2XCoreUserPropertyHistory instance);
    partial void UpdateB2XCoreUserPropertyHistory(B2XCoreUserPropertyHistory instance);
    partial void DeleteB2XCoreUserPropertyHistory(B2XCoreUserPropertyHistory instance);
    partial void InsertB2XCoreTimeZoneHistory(B2XCoreTimeZoneHistory instance);
    partial void UpdateB2XCoreTimeZoneHistory(B2XCoreTimeZoneHistory instance);
    partial void DeleteB2XCoreTimeZoneHistory(B2XCoreTimeZoneHistory instance);
    #endregion
		
		public B2XCoreHistoryDataContext() : 
				base(global::B2XCore.Properties.Settings.Default.B2XSmartClient_testConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public B2XCoreHistoryDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public B2XCoreHistoryDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public B2XCoreHistoryDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public B2XCoreHistoryDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<B2XCoreApplicationHistory> B2XCoreApplicationHistories
		{
			get
			{
				return this.GetTable<B2XCoreApplicationHistory>();
			}
		}
		
		public System.Data.Linq.Table<B2XCoreClientHistory> B2XCoreClientHistories
		{
			get
			{
				return this.GetTable<B2XCoreClientHistory>();
			}
		}
		
		public System.Data.Linq.Table<B2XCoreClientLanguageHistory> B2XCoreClientLanguageHistories
		{
			get
			{
				return this.GetTable<B2XCoreClientLanguageHistory>();
			}
		}
		
		public System.Data.Linq.Table<B2XCoreDomainHistory> B2XCoreDomainHistories
		{
			get
			{
				return this.GetTable<B2XCoreDomainHistory>();
			}
		}
		
		public System.Data.Linq.Table<B2XCoreDomainResourceHistory> B2XCoreDomainResourceHistories
		{
			get
			{
				return this.GetTable<B2XCoreDomainResourceHistory>();
			}
		}
		
		public System.Data.Linq.Table<B2XCoreGroupHistory> B2XCoreGroupHistories
		{
			get
			{
				return this.GetTable<B2XCoreGroupHistory>();
			}
		}
		
		public System.Data.Linq.Table<B2XCoreImplementationHistory> B2XCoreImplementationHistories
		{
			get
			{
				return this.GetTable<B2XCoreImplementationHistory>();
			}
		}
		
		public System.Data.Linq.Table<B2XCoreInstanceActivityHistory> B2XCoreInstanceActivityHistories
		{
			get
			{
				return this.GetTable<B2XCoreInstanceActivityHistory>();
			}
		}
		
		public System.Data.Linq.Table<B2XCoreInstanceHistory> B2XCoreInstanceHistories
		{
			get
			{
				return this.GetTable<B2XCoreInstanceHistory>();
			}
		}
		
		public System.Data.Linq.Table<B2XCoreLanguageHistory> B2XCoreLanguageHistories
		{
			get
			{
				return this.GetTable<B2XCoreLanguageHistory>();
			}
		}
		
		public System.Data.Linq.Table<B2XCoreMachineHistory> B2XCoreMachineHistories
		{
			get
			{
				return this.GetTable<B2XCoreMachineHistory>();
			}
		}
		
		public System.Data.Linq.Table<B2XCoreResourceHistory> B2XCoreResourceHistories
		{
			get
			{
				return this.GetTable<B2XCoreResourceHistory>();
			}
		}
		
		public System.Data.Linq.Table<B2XCoreResourceResourceValueHistory> B2XCoreResourceResourceValueHistories
		{
			get
			{
				return this.GetTable<B2XCoreResourceResourceValueHistory>();
			}
		}
		
		public System.Data.Linq.Table<B2XCoreResourceValueHistory> B2XCoreResourceValueHistories
		{
			get
			{
				return this.GetTable<B2XCoreResourceValueHistory>();
			}
		}
		
		public System.Data.Linq.Table<B2XCoreSettingDefinitionHistory> B2XCoreSettingDefinitionHistories
		{
			get
			{
				return this.GetTable<B2XCoreSettingDefinitionHistory>();
			}
		}
		
		public System.Data.Linq.Table<B2XCoreSettingHistory> B2XCoreSettingHistories
		{
			get
			{
				return this.GetTable<B2XCoreSettingHistory>();
			}
		}
		
		public System.Data.Linq.Table<B2XCoreUserDomainResourceHistory> B2XCoreUserDomainResourceHistories
		{
			get
			{
				return this.GetTable<B2XCoreUserDomainResourceHistory>();
			}
		}
		
		public System.Data.Linq.Table<B2XCoreUserGroupHistory> B2XCoreUserGroupHistories
		{
			get
			{
				return this.GetTable<B2XCoreUserGroupHistory>();
			}
		}
		
		public System.Data.Linq.Table<B2XCoreUserHistory> B2XCoreUserHistories
		{
			get
			{
				return this.GetTable<B2XCoreUserHistory>();
			}
		}
		
		public System.Data.Linq.Table<B2XCoreUserPropertyDefinitionHistory> B2XCoreUserPropertyDefinitionHistories
		{
			get
			{
				return this.GetTable<B2XCoreUserPropertyDefinitionHistory>();
			}
		}
		
		public System.Data.Linq.Table<B2XCoreUserPropertyHistory> B2XCoreUserPropertyHistories
		{
			get
			{
				return this.GetTable<B2XCoreUserPropertyHistory>();
			}
		}
		
		public System.Data.Linq.Table<B2XCoreTimeZoneHistory> B2XCoreTimeZoneHistories
		{
			get
			{
				return this.GetTable<B2XCoreTimeZoneHistory>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblB2XCoreApplicationHistory")]
	public partial class B2XCoreApplicationHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HistoryID;
		
		private int _ApplicationID;
		
		private System.Guid _UniqueID;
		
		private string _Name;
		
		private string _Editor;
		
		private System.DateTime _ModifiedUtc;
		
		private System.Data.Linq.Binary _RowVersion;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHistoryIDChanging(int value);
    partial void OnHistoryIDChanged();
    partial void OnApplicationIDChanging(int value);
    partial void OnApplicationIDChanged();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnEditorChanging(string value);
    partial void OnEditorChanged();
    partial void OnModifiedUtcChanging(System.DateTime value);
    partial void OnModifiedUtcChanged();
    partial void OnRowVersionChanging(System.Data.Linq.Binary value);
    partial void OnRowVersionChanged();
    #endregion
		
		public B2XCoreApplicationHistory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HistoryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int HistoryID
		{
			get
			{
				return this._HistoryID;
			}
			set
			{
				if ((this._HistoryID != value))
				{
					this.OnHistoryIDChanging(value);
					this.SendPropertyChanging();
					this._HistoryID = value;
					this.SendPropertyChanged("HistoryID");
					this.OnHistoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationID", DbType="Int NOT NULL")]
		public int ApplicationID
		{
			get
			{
				return this._ApplicationID;
			}
			set
			{
				if ((this._ApplicationID != value))
				{
					this.OnApplicationIDChanging(value);
					this.SendPropertyChanging();
					this._ApplicationID = value;
					this.SendPropertyChanged("ApplicationID");
					this.OnApplicationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Editor", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Editor
		{
			get
			{
				return this._Editor;
			}
			set
			{
				if ((this._Editor != value))
				{
					this.OnEditorChanging(value);
					this.SendPropertyChanging();
					this._Editor = value;
					this.SendPropertyChanged("Editor");
					this.OnEditorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedUtc", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedUtc
		{
			get
			{
				return this._ModifiedUtc;
			}
			set
			{
				if ((this._ModifiedUtc != value))
				{
					this.OnModifiedUtcChanging(value);
					this.SendPropertyChanging();
					this._ModifiedUtc = value;
					this.SendPropertyChanged("ModifiedUtc");
					this.OnModifiedUtcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false)]
		public System.Data.Linq.Binary RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblB2XCoreClientHistory")]
	public partial class B2XCoreClientHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HistoryID;
		
		private int _ClientID;
		
		private System.Guid _UniqueID;
		
		private string _Name;
		
		private int _ApplicationID;
		
		private string _Editor;
		
		private System.DateTime _ModifiedUtc;
		
		private System.Data.Linq.Binary _RowVersion;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHistoryIDChanging(int value);
    partial void OnHistoryIDChanged();
    partial void OnClientIDChanging(int value);
    partial void OnClientIDChanged();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnApplicationIDChanging(int value);
    partial void OnApplicationIDChanged();
    partial void OnEditorChanging(string value);
    partial void OnEditorChanged();
    partial void OnModifiedUtcChanging(System.DateTime value);
    partial void OnModifiedUtcChanged();
    partial void OnRowVersionChanging(System.Data.Linq.Binary value);
    partial void OnRowVersionChanged();
    #endregion
		
		public B2XCoreClientHistory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HistoryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int HistoryID
		{
			get
			{
				return this._HistoryID;
			}
			set
			{
				if ((this._HistoryID != value))
				{
					this.OnHistoryIDChanging(value);
					this.SendPropertyChanging();
					this._HistoryID = value;
					this.SendPropertyChanged("HistoryID");
					this.OnHistoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="Int NOT NULL")]
		public int ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationID", DbType="Int NOT NULL")]
		public int ApplicationID
		{
			get
			{
				return this._ApplicationID;
			}
			set
			{
				if ((this._ApplicationID != value))
				{
					this.OnApplicationIDChanging(value);
					this.SendPropertyChanging();
					this._ApplicationID = value;
					this.SendPropertyChanged("ApplicationID");
					this.OnApplicationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Editor", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Editor
		{
			get
			{
				return this._Editor;
			}
			set
			{
				if ((this._Editor != value))
				{
					this.OnEditorChanging(value);
					this.SendPropertyChanging();
					this._Editor = value;
					this.SendPropertyChanged("Editor");
					this.OnEditorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedUtc", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedUtc
		{
			get
			{
				return this._ModifiedUtc;
			}
			set
			{
				if ((this._ModifiedUtc != value))
				{
					this.OnModifiedUtcChanging(value);
					this.SendPropertyChanging();
					this._ModifiedUtc = value;
					this.SendPropertyChanged("ModifiedUtc");
					this.OnModifiedUtcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false)]
		public System.Data.Linq.Binary RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblB2XCoreClientLanguageHistory")]
	public partial class B2XCoreClientLanguageHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HistoryID;
		
		private int _ClientID;
		
		private int _LanguageID;
		
		private bool _IsEnabled;
		
		private string _Editor;
		
		private System.DateTime _ModifiedUtc;
		
		private System.Data.Linq.Binary _RowVersion;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHistoryIDChanging(int value);
    partial void OnHistoryIDChanged();
    partial void OnClientIDChanging(int value);
    partial void OnClientIDChanged();
    partial void OnLanguageIDChanging(int value);
    partial void OnLanguageIDChanged();
    partial void OnIsEnabledChanging(bool value);
    partial void OnIsEnabledChanged();
    partial void OnEditorChanging(string value);
    partial void OnEditorChanged();
    partial void OnModifiedUtcChanging(System.DateTime value);
    partial void OnModifiedUtcChanged();
    partial void OnRowVersionChanging(System.Data.Linq.Binary value);
    partial void OnRowVersionChanged();
    #endregion
		
		public B2XCoreClientLanguageHistory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HistoryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int HistoryID
		{
			get
			{
				return this._HistoryID;
			}
			set
			{
				if ((this._HistoryID != value))
				{
					this.OnHistoryIDChanging(value);
					this.SendPropertyChanging();
					this._HistoryID = value;
					this.SendPropertyChanged("HistoryID");
					this.OnHistoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="Int NOT NULL")]
		public int ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageID", DbType="Int NOT NULL")]
		public int LanguageID
		{
			get
			{
				return this._LanguageID;
			}
			set
			{
				if ((this._LanguageID != value))
				{
					this.OnLanguageIDChanging(value);
					this.SendPropertyChanging();
					this._LanguageID = value;
					this.SendPropertyChanged("LanguageID");
					this.OnLanguageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEnabled", DbType="Bit NOT NULL")]
		public bool IsEnabled
		{
			get
			{
				return this._IsEnabled;
			}
			set
			{
				if ((this._IsEnabled != value))
				{
					this.OnIsEnabledChanging(value);
					this.SendPropertyChanging();
					this._IsEnabled = value;
					this.SendPropertyChanged("IsEnabled");
					this.OnIsEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Editor", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Editor
		{
			get
			{
				return this._Editor;
			}
			set
			{
				if ((this._Editor != value))
				{
					this.OnEditorChanging(value);
					this.SendPropertyChanging();
					this._Editor = value;
					this.SendPropertyChanged("Editor");
					this.OnEditorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedUtc", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedUtc
		{
			get
			{
				return this._ModifiedUtc;
			}
			set
			{
				if ((this._ModifiedUtc != value))
				{
					this.OnModifiedUtcChanging(value);
					this.SendPropertyChanging();
					this._ModifiedUtc = value;
					this.SendPropertyChanged("ModifiedUtc");
					this.OnModifiedUtcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false)]
		public System.Data.Linq.Binary RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblB2XCoreDomainHistory")]
	public partial class B2XCoreDomainHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HistoryID;
		
		private int _DomainID;
		
		private string _Name;
		
		private int _ImplementationID;
		
		private string _Path;
		
		private string _Editor;
		
		private System.DateTime _ModifiedUtc;
		
		private string _AuthGroup;
		
		private System.Data.Linq.Binary _RowVersion;
		
		private string _Suffix;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHistoryIDChanging(int value);
    partial void OnHistoryIDChanged();
    partial void OnDomainIDChanging(int value);
    partial void OnDomainIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnImplementationIDChanging(int value);
    partial void OnImplementationIDChanged();
    partial void OnPathChanging(string value);
    partial void OnPathChanged();
    partial void OnEditorChanging(string value);
    partial void OnEditorChanged();
    partial void OnModifiedUtcChanging(System.DateTime value);
    partial void OnModifiedUtcChanged();
    partial void OnAuthGroupChanging(string value);
    partial void OnAuthGroupChanged();
    partial void OnRowVersionChanging(System.Data.Linq.Binary value);
    partial void OnRowVersionChanged();
    partial void OnSuffixChanging(string value);
    partial void OnSuffixChanged();
    #endregion
		
		public B2XCoreDomainHistory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HistoryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int HistoryID
		{
			get
			{
				return this._HistoryID;
			}
			set
			{
				if ((this._HistoryID != value))
				{
					this.OnHistoryIDChanging(value);
					this.SendPropertyChanging();
					this._HistoryID = value;
					this.SendPropertyChanged("HistoryID");
					this.OnHistoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DomainID", DbType="Int NOT NULL")]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					this.OnDomainIDChanging(value);
					this.SendPropertyChanging();
					this._DomainID = value;
					this.SendPropertyChanged("DomainID");
					this.OnDomainIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImplementationID", DbType="Int NOT NULL")]
		public int ImplementationID
		{
			get
			{
				return this._ImplementationID;
			}
			set
			{
				if ((this._ImplementationID != value))
				{
					this.OnImplementationIDChanging(value);
					this.SendPropertyChanging();
					this._ImplementationID = value;
					this.SendPropertyChanged("ImplementationID");
					this.OnImplementationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Path", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Path
		{
			get
			{
				return this._Path;
			}
			set
			{
				if ((this._Path != value))
				{
					this.OnPathChanging(value);
					this.SendPropertyChanging();
					this._Path = value;
					this.SendPropertyChanged("Path");
					this.OnPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Editor", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Editor
		{
			get
			{
				return this._Editor;
			}
			set
			{
				if ((this._Editor != value))
				{
					this.OnEditorChanging(value);
					this.SendPropertyChanging();
					this._Editor = value;
					this.SendPropertyChanged("Editor");
					this.OnEditorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedUtc", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedUtc
		{
			get
			{
				return this._ModifiedUtc;
			}
			set
			{
				if ((this._ModifiedUtc != value))
				{
					this.OnModifiedUtcChanging(value);
					this.SendPropertyChanging();
					this._ModifiedUtc = value;
					this.SendPropertyChanged("ModifiedUtc");
					this.OnModifiedUtcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthGroup", DbType="NVarChar(10)")]
		public string AuthGroup
		{
			get
			{
				return this._AuthGroup;
			}
			set
			{
				if ((this._AuthGroup != value))
				{
					this.OnAuthGroupChanging(value);
					this.SendPropertyChanging();
					this._AuthGroup = value;
					this.SendPropertyChanged("AuthGroup");
					this.OnAuthGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false)]
		public System.Data.Linq.Binary RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Suffix", DbType="NVarChar(50)")]
		public string Suffix
		{
			get
			{
				return this._Suffix;
			}
			set
			{
				if ((this._Suffix != value))
				{
					this.OnSuffixChanging(value);
					this.SendPropertyChanging();
					this._Suffix = value;
					this.SendPropertyChanged("Suffix");
					this.OnSuffixChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblB2XCoreDomainResourceHistory")]
	public partial class B2XCoreDomainResourceHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HistoryID;
		
		private int _DomainResourceID;
		
		private int _DomainID;
		
		private string _Name;
		
		private string _Editor;
		
		private System.DateTime _ModifiedUtc;
		
		private System.Data.Linq.Binary _RowVersion;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHistoryIDChanging(int value);
    partial void OnHistoryIDChanged();
    partial void OnDomainResourceIDChanging(int value);
    partial void OnDomainResourceIDChanged();
    partial void OnDomainIDChanging(int value);
    partial void OnDomainIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnEditorChanging(string value);
    partial void OnEditorChanged();
    partial void OnModifiedUtcChanging(System.DateTime value);
    partial void OnModifiedUtcChanged();
    partial void OnRowVersionChanging(System.Data.Linq.Binary value);
    partial void OnRowVersionChanged();
    #endregion
		
		public B2XCoreDomainResourceHistory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HistoryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int HistoryID
		{
			get
			{
				return this._HistoryID;
			}
			set
			{
				if ((this._HistoryID != value))
				{
					this.OnHistoryIDChanging(value);
					this.SendPropertyChanging();
					this._HistoryID = value;
					this.SendPropertyChanged("HistoryID");
					this.OnHistoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DomainResourceID", DbType="Int NOT NULL")]
		public int DomainResourceID
		{
			get
			{
				return this._DomainResourceID;
			}
			set
			{
				if ((this._DomainResourceID != value))
				{
					this.OnDomainResourceIDChanging(value);
					this.SendPropertyChanging();
					this._DomainResourceID = value;
					this.SendPropertyChanged("DomainResourceID");
					this.OnDomainResourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DomainID", DbType="Int NOT NULL")]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					this.OnDomainIDChanging(value);
					this.SendPropertyChanging();
					this._DomainID = value;
					this.SendPropertyChanged("DomainID");
					this.OnDomainIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Editor", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Editor
		{
			get
			{
				return this._Editor;
			}
			set
			{
				if ((this._Editor != value))
				{
					this.OnEditorChanging(value);
					this.SendPropertyChanging();
					this._Editor = value;
					this.SendPropertyChanged("Editor");
					this.OnEditorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedUtc", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedUtc
		{
			get
			{
				return this._ModifiedUtc;
			}
			set
			{
				if ((this._ModifiedUtc != value))
				{
					this.OnModifiedUtcChanging(value);
					this.SendPropertyChanging();
					this._ModifiedUtc = value;
					this.SendPropertyChanged("ModifiedUtc");
					this.OnModifiedUtcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false)]
		public System.Data.Linq.Binary RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblB2XCoreGroupHistory")]
	public partial class B2XCoreGroupHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HistoryID;
		
		private int _GroupID;
		
		private string _Name;
		
		private bool _IsEnabled;
		
		private string _Editor;
		
		private System.DateTime _ModifiedUtc;
		
		private System.Data.Linq.Binary _RowVersion;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHistoryIDChanging(int value);
    partial void OnHistoryIDChanged();
    partial void OnGroupIDChanging(int value);
    partial void OnGroupIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsEnabledChanging(bool value);
    partial void OnIsEnabledChanged();
    partial void OnEditorChanging(string value);
    partial void OnEditorChanged();
    partial void OnModifiedUtcChanging(System.DateTime value);
    partial void OnModifiedUtcChanged();
    partial void OnRowVersionChanging(System.Data.Linq.Binary value);
    partial void OnRowVersionChanged();
    #endregion
		
		public B2XCoreGroupHistory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HistoryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int HistoryID
		{
			get
			{
				return this._HistoryID;
			}
			set
			{
				if ((this._HistoryID != value))
				{
					this.OnHistoryIDChanging(value);
					this.SendPropertyChanging();
					this._HistoryID = value;
					this.SendPropertyChanged("HistoryID");
					this.OnHistoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="Int NOT NULL")]
		public int GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEnabled", DbType="Bit NOT NULL")]
		public bool IsEnabled
		{
			get
			{
				return this._IsEnabled;
			}
			set
			{
				if ((this._IsEnabled != value))
				{
					this.OnIsEnabledChanging(value);
					this.SendPropertyChanging();
					this._IsEnabled = value;
					this.SendPropertyChanged("IsEnabled");
					this.OnIsEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Editor", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Editor
		{
			get
			{
				return this._Editor;
			}
			set
			{
				if ((this._Editor != value))
				{
					this.OnEditorChanging(value);
					this.SendPropertyChanging();
					this._Editor = value;
					this.SendPropertyChanged("Editor");
					this.OnEditorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedUtc", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedUtc
		{
			get
			{
				return this._ModifiedUtc;
			}
			set
			{
				if ((this._ModifiedUtc != value))
				{
					this.OnModifiedUtcChanging(value);
					this.SendPropertyChanging();
					this._ModifiedUtc = value;
					this.SendPropertyChanged("ModifiedUtc");
					this.OnModifiedUtcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false)]
		public System.Data.Linq.Binary RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblB2XCoreImplementationHistory")]
	public partial class B2XCoreImplementationHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HistoryID;
		
		private int _ImplementationID;
		
		private string _TypeName;
		
		private string _InterfaceName;
		
		private string _Editor;
		
		private System.DateTime _ModifiedUtc;
		
		private System.Data.Linq.Binary _RowVersion;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHistoryIDChanging(int value);
    partial void OnHistoryIDChanged();
    partial void OnImplementationIDChanging(int value);
    partial void OnImplementationIDChanged();
    partial void OnTypeNameChanging(string value);
    partial void OnTypeNameChanged();
    partial void OnInterfaceNameChanging(string value);
    partial void OnInterfaceNameChanged();
    partial void OnEditorChanging(string value);
    partial void OnEditorChanged();
    partial void OnModifiedUtcChanging(System.DateTime value);
    partial void OnModifiedUtcChanged();
    partial void OnRowVersionChanging(System.Data.Linq.Binary value);
    partial void OnRowVersionChanged();
    #endregion
		
		public B2XCoreImplementationHistory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HistoryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int HistoryID
		{
			get
			{
				return this._HistoryID;
			}
			set
			{
				if ((this._HistoryID != value))
				{
					this.OnHistoryIDChanging(value);
					this.SendPropertyChanging();
					this._HistoryID = value;
					this.SendPropertyChanged("HistoryID");
					this.OnHistoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImplementationID", DbType="Int NOT NULL")]
		public int ImplementationID
		{
			get
			{
				return this._ImplementationID;
			}
			set
			{
				if ((this._ImplementationID != value))
				{
					this.OnImplementationIDChanging(value);
					this.SendPropertyChanging();
					this._ImplementationID = value;
					this.SendPropertyChanged("ImplementationID");
					this.OnImplementationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string TypeName
		{
			get
			{
				return this._TypeName;
			}
			set
			{
				if ((this._TypeName != value))
				{
					this.OnTypeNameChanging(value);
					this.SendPropertyChanging();
					this._TypeName = value;
					this.SendPropertyChanged("TypeName");
					this.OnTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterfaceName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string InterfaceName
		{
			get
			{
				return this._InterfaceName;
			}
			set
			{
				if ((this._InterfaceName != value))
				{
					this.OnInterfaceNameChanging(value);
					this.SendPropertyChanging();
					this._InterfaceName = value;
					this.SendPropertyChanged("InterfaceName");
					this.OnInterfaceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Editor", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Editor
		{
			get
			{
				return this._Editor;
			}
			set
			{
				if ((this._Editor != value))
				{
					this.OnEditorChanging(value);
					this.SendPropertyChanging();
					this._Editor = value;
					this.SendPropertyChanged("Editor");
					this.OnEditorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedUtc", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedUtc
		{
			get
			{
				return this._ModifiedUtc;
			}
			set
			{
				if ((this._ModifiedUtc != value))
				{
					this.OnModifiedUtcChanging(value);
					this.SendPropertyChanging();
					this._ModifiedUtc = value;
					this.SendPropertyChanged("ModifiedUtc");
					this.OnModifiedUtcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false)]
		public System.Data.Linq.Binary RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblB2XCoreInstanceActivityHistory")]
	public partial class B2XCoreInstanceActivityHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HistoryID;
		
		private int _InstanceID;
		
		private int _MachineID;
		
		private int _ProcessID;
		
		private System.Guid _UniqueID;
		
		private System.DateTime _StartDateUtc;
		
		private System.Nullable<System.DateTime> _EndDateUtc;
		
		private System.Nullable<System.DateTime> _LastIsAliveUtc;
		
		private string _Editor;
		
		private string _ClientIP;
		
		private System.DateTime _ModifiedUtc;
		
		private System.Data.Linq.Binary _RowVersion;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHistoryIDChanging(int value);
    partial void OnHistoryIDChanged();
    partial void OnInstanceIDChanging(int value);
    partial void OnInstanceIDChanged();
    partial void OnMachineIDChanging(int value);
    partial void OnMachineIDChanged();
    partial void OnProcessIDChanging(int value);
    partial void OnProcessIDChanged();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnStartDateUtcChanging(System.DateTime value);
    partial void OnStartDateUtcChanged();
    partial void OnEndDateUtcChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateUtcChanged();
    partial void OnLastIsAliveUtcChanging(System.Nullable<System.DateTime> value);
    partial void OnLastIsAliveUtcChanged();
    partial void OnEditorChanging(string value);
    partial void OnEditorChanged();
    partial void OnClientIPChanging(string value);
    partial void OnClientIPChanged();
    partial void OnModifiedUtcChanging(System.DateTime value);
    partial void OnModifiedUtcChanged();
    partial void OnRowVersionChanging(System.Data.Linq.Binary value);
    partial void OnRowVersionChanged();
    #endregion
		
		public B2XCoreInstanceActivityHistory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HistoryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int HistoryID
		{
			get
			{
				return this._HistoryID;
			}
			set
			{
				if ((this._HistoryID != value))
				{
					this.OnHistoryIDChanging(value);
					this.SendPropertyChanging();
					this._HistoryID = value;
					this.SendPropertyChanged("HistoryID");
					this.OnHistoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstanceID", DbType="Int NOT NULL")]
		public int InstanceID
		{
			get
			{
				return this._InstanceID;
			}
			set
			{
				if ((this._InstanceID != value))
				{
					this.OnInstanceIDChanging(value);
					this.SendPropertyChanging();
					this._InstanceID = value;
					this.SendPropertyChanged("InstanceID");
					this.OnInstanceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MachineID", DbType="Int NOT NULL")]
		public int MachineID
		{
			get
			{
				return this._MachineID;
			}
			set
			{
				if ((this._MachineID != value))
				{
					this.OnMachineIDChanging(value);
					this.SendPropertyChanging();
					this._MachineID = value;
					this.SendPropertyChanged("MachineID");
					this.OnMachineIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessID", DbType="Int NOT NULL")]
		public int ProcessID
		{
			get
			{
				return this._ProcessID;
			}
			set
			{
				if ((this._ProcessID != value))
				{
					this.OnProcessIDChanging(value);
					this.SendPropertyChanging();
					this._ProcessID = value;
					this.SendPropertyChanged("ProcessID");
					this.OnProcessIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDateUtc", DbType="DateTime NOT NULL")]
		public System.DateTime StartDateUtc
		{
			get
			{
				return this._StartDateUtc;
			}
			set
			{
				if ((this._StartDateUtc != value))
				{
					this.OnStartDateUtcChanging(value);
					this.SendPropertyChanging();
					this._StartDateUtc = value;
					this.SendPropertyChanged("StartDateUtc");
					this.OnStartDateUtcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDateUtc", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDateUtc
		{
			get
			{
				return this._EndDateUtc;
			}
			set
			{
				if ((this._EndDateUtc != value))
				{
					this.OnEndDateUtcChanging(value);
					this.SendPropertyChanging();
					this._EndDateUtc = value;
					this.SendPropertyChanged("EndDateUtc");
					this.OnEndDateUtcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastIsAliveUtc", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastIsAliveUtc
		{
			get
			{
				return this._LastIsAliveUtc;
			}
			set
			{
				if ((this._LastIsAliveUtc != value))
				{
					this.OnLastIsAliveUtcChanging(value);
					this.SendPropertyChanging();
					this._LastIsAliveUtc = value;
					this.SendPropertyChanged("LastIsAliveUtc");
					this.OnLastIsAliveUtcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Editor", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Editor
		{
			get
			{
				return this._Editor;
			}
			set
			{
				if ((this._Editor != value))
				{
					this.OnEditorChanging(value);
					this.SendPropertyChanging();
					this._Editor = value;
					this.SendPropertyChanged("Editor");
					this.OnEditorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientIP", DbType="NVarChar(15)")]
		public string ClientIP
		{
			get
			{
				return this._ClientIP;
			}
			set
			{
				if ((this._ClientIP != value))
				{
					this.OnClientIPChanging(value);
					this.SendPropertyChanging();
					this._ClientIP = value;
					this.SendPropertyChanged("ClientIP");
					this.OnClientIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedUtc", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedUtc
		{
			get
			{
				return this._ModifiedUtc;
			}
			set
			{
				if ((this._ModifiedUtc != value))
				{
					this.OnModifiedUtcChanging(value);
					this.SendPropertyChanging();
					this._ModifiedUtc = value;
					this.SendPropertyChanged("ModifiedUtc");
					this.OnModifiedUtcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false)]
		public System.Data.Linq.Binary RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblB2XCoreInstanceHistory")]
	public partial class B2XCoreInstanceHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HistoryID;
		
		private int _InstanceID;
		
		private System.Guid _UniqueID;
		
		private string _ApplicationName;
		
		private string _InstanceName;
		
		private string _Editor;
		
		private System.DateTime _ModifiedUtc;
		
		private System.Data.Linq.Binary _RowVersion;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHistoryIDChanging(int value);
    partial void OnHistoryIDChanged();
    partial void OnInstanceIDChanging(int value);
    partial void OnInstanceIDChanged();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnApplicationNameChanging(string value);
    partial void OnApplicationNameChanged();
    partial void OnInstanceNameChanging(string value);
    partial void OnInstanceNameChanged();
    partial void OnEditorChanging(string value);
    partial void OnEditorChanged();
    partial void OnModifiedUtcChanging(System.DateTime value);
    partial void OnModifiedUtcChanged();
    partial void OnRowVersionChanging(System.Data.Linq.Binary value);
    partial void OnRowVersionChanged();
    #endregion
		
		public B2XCoreInstanceHistory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HistoryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int HistoryID
		{
			get
			{
				return this._HistoryID;
			}
			set
			{
				if ((this._HistoryID != value))
				{
					this.OnHistoryIDChanging(value);
					this.SendPropertyChanging();
					this._HistoryID = value;
					this.SendPropertyChanged("HistoryID");
					this.OnHistoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstanceID", DbType="Int NOT NULL")]
		public int InstanceID
		{
			get
			{
				return this._InstanceID;
			}
			set
			{
				if ((this._InstanceID != value))
				{
					this.OnInstanceIDChanging(value);
					this.SendPropertyChanging();
					this._InstanceID = value;
					this.SendPropertyChanged("InstanceID");
					this.OnInstanceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string ApplicationName
		{
			get
			{
				return this._ApplicationName;
			}
			set
			{
				if ((this._ApplicationName != value))
				{
					this.OnApplicationNameChanging(value);
					this.SendPropertyChanging();
					this._ApplicationName = value;
					this.SendPropertyChanged("ApplicationName");
					this.OnApplicationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstanceName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string InstanceName
		{
			get
			{
				return this._InstanceName;
			}
			set
			{
				if ((this._InstanceName != value))
				{
					this.OnInstanceNameChanging(value);
					this.SendPropertyChanging();
					this._InstanceName = value;
					this.SendPropertyChanged("InstanceName");
					this.OnInstanceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Editor", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Editor
		{
			get
			{
				return this._Editor;
			}
			set
			{
				if ((this._Editor != value))
				{
					this.OnEditorChanging(value);
					this.SendPropertyChanging();
					this._Editor = value;
					this.SendPropertyChanged("Editor");
					this.OnEditorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedUtc", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedUtc
		{
			get
			{
				return this._ModifiedUtc;
			}
			set
			{
				if ((this._ModifiedUtc != value))
				{
					this.OnModifiedUtcChanging(value);
					this.SendPropertyChanging();
					this._ModifiedUtc = value;
					this.SendPropertyChanged("ModifiedUtc");
					this.OnModifiedUtcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false)]
		public System.Data.Linq.Binary RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblB2XCoreLanguageHistory")]
	public partial class B2XCoreLanguageHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HistoryID;
		
		private int _LanguageID;
		
		private string _Name;
		
		private string _EnglishName;
		
		private string _NativeName;
		
		private string _IetfLanguageTag;
		
		private string _ThreeLetterISOLanguageName;
		
		private string _ThreeLetterWindowsLanguageName;
		
		private string _TwoLetterISOLanguageName;
		
		private string _Editor;
		
		private System.DateTime _ModifiedUtc;
		
		private System.Data.Linq.Binary _RowVersion;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHistoryIDChanging(int value);
    partial void OnHistoryIDChanged();
    partial void OnLanguageIDChanging(int value);
    partial void OnLanguageIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnEnglishNameChanging(string value);
    partial void OnEnglishNameChanged();
    partial void OnNativeNameChanging(string value);
    partial void OnNativeNameChanged();
    partial void OnIetfLanguageTagChanging(string value);
    partial void OnIetfLanguageTagChanged();
    partial void OnThreeLetterISOLanguageNameChanging(string value);
    partial void OnThreeLetterISOLanguageNameChanged();
    partial void OnThreeLetterWindowsLanguageNameChanging(string value);
    partial void OnThreeLetterWindowsLanguageNameChanged();
    partial void OnTwoLetterISOLanguageNameChanging(string value);
    partial void OnTwoLetterISOLanguageNameChanged();
    partial void OnEditorChanging(string value);
    partial void OnEditorChanged();
    partial void OnModifiedUtcChanging(System.DateTime value);
    partial void OnModifiedUtcChanged();
    partial void OnRowVersionChanging(System.Data.Linq.Binary value);
    partial void OnRowVersionChanged();
    #endregion
		
		public B2XCoreLanguageHistory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HistoryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int HistoryID
		{
			get
			{
				return this._HistoryID;
			}
			set
			{
				if ((this._HistoryID != value))
				{
					this.OnHistoryIDChanging(value);
					this.SendPropertyChanging();
					this._HistoryID = value;
					this.SendPropertyChanged("HistoryID");
					this.OnHistoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageID", DbType="Int NOT NULL")]
		public int LanguageID
		{
			get
			{
				return this._LanguageID;
			}
			set
			{
				if ((this._LanguageID != value))
				{
					this.OnLanguageIDChanging(value);
					this.SendPropertyChanging();
					this._LanguageID = value;
					this.SendPropertyChanged("LanguageID");
					this.OnLanguageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnglishName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string EnglishName
		{
			get
			{
				return this._EnglishName;
			}
			set
			{
				if ((this._EnglishName != value))
				{
					this.OnEnglishNameChanging(value);
					this.SendPropertyChanging();
					this._EnglishName = value;
					this.SendPropertyChanged("EnglishName");
					this.OnEnglishNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NativeName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string NativeName
		{
			get
			{
				return this._NativeName;
			}
			set
			{
				if ((this._NativeName != value))
				{
					this.OnNativeNameChanging(value);
					this.SendPropertyChanging();
					this._NativeName = value;
					this.SendPropertyChanged("NativeName");
					this.OnNativeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IetfLanguageTag", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string IetfLanguageTag
		{
			get
			{
				return this._IetfLanguageTag;
			}
			set
			{
				if ((this._IetfLanguageTag != value))
				{
					this.OnIetfLanguageTagChanging(value);
					this.SendPropertyChanging();
					this._IetfLanguageTag = value;
					this.SendPropertyChanged("IetfLanguageTag");
					this.OnIetfLanguageTagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThreeLetterISOLanguageName", DbType="NChar(6) NOT NULL", CanBeNull=false)]
		public string ThreeLetterISOLanguageName
		{
			get
			{
				return this._ThreeLetterISOLanguageName;
			}
			set
			{
				if ((this._ThreeLetterISOLanguageName != value))
				{
					this.OnThreeLetterISOLanguageNameChanging(value);
					this.SendPropertyChanging();
					this._ThreeLetterISOLanguageName = value;
					this.SendPropertyChanged("ThreeLetterISOLanguageName");
					this.OnThreeLetterISOLanguageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThreeLetterWindowsLanguageName", DbType="NChar(6) NOT NULL", CanBeNull=false)]
		public string ThreeLetterWindowsLanguageName
		{
			get
			{
				return this._ThreeLetterWindowsLanguageName;
			}
			set
			{
				if ((this._ThreeLetterWindowsLanguageName != value))
				{
					this.OnThreeLetterWindowsLanguageNameChanging(value);
					this.SendPropertyChanging();
					this._ThreeLetterWindowsLanguageName = value;
					this.SendPropertyChanged("ThreeLetterWindowsLanguageName");
					this.OnThreeLetterWindowsLanguageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TwoLetterISOLanguageName", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		public string TwoLetterISOLanguageName
		{
			get
			{
				return this._TwoLetterISOLanguageName;
			}
			set
			{
				if ((this._TwoLetterISOLanguageName != value))
				{
					this.OnTwoLetterISOLanguageNameChanging(value);
					this.SendPropertyChanging();
					this._TwoLetterISOLanguageName = value;
					this.SendPropertyChanged("TwoLetterISOLanguageName");
					this.OnTwoLetterISOLanguageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Editor", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Editor
		{
			get
			{
				return this._Editor;
			}
			set
			{
				if ((this._Editor != value))
				{
					this.OnEditorChanging(value);
					this.SendPropertyChanging();
					this._Editor = value;
					this.SendPropertyChanged("Editor");
					this.OnEditorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedUtc", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedUtc
		{
			get
			{
				return this._ModifiedUtc;
			}
			set
			{
				if ((this._ModifiedUtc != value))
				{
					this.OnModifiedUtcChanging(value);
					this.SendPropertyChanging();
					this._ModifiedUtc = value;
					this.SendPropertyChanged("ModifiedUtc");
					this.OnModifiedUtcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false)]
		public System.Data.Linq.Binary RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblB2XCoreMachineHistory")]
	public partial class B2XCoreMachineHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HistoryID;
		
		private int _MachineID;
		
		private System.Guid _UniqueID;
		
		private string _Name;
		
		private string _Editor;
		
		private System.DateTime _ModifiedUtc;
		
		private System.Data.Linq.Binary _RowVersion;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHistoryIDChanging(int value);
    partial void OnHistoryIDChanged();
    partial void OnMachineIDChanging(int value);
    partial void OnMachineIDChanged();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnEditorChanging(string value);
    partial void OnEditorChanged();
    partial void OnModifiedUtcChanging(System.DateTime value);
    partial void OnModifiedUtcChanged();
    partial void OnRowVersionChanging(System.Data.Linq.Binary value);
    partial void OnRowVersionChanged();
    #endregion
		
		public B2XCoreMachineHistory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HistoryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int HistoryID
		{
			get
			{
				return this._HistoryID;
			}
			set
			{
				if ((this._HistoryID != value))
				{
					this.OnHistoryIDChanging(value);
					this.SendPropertyChanging();
					this._HistoryID = value;
					this.SendPropertyChanged("HistoryID");
					this.OnHistoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MachineID", DbType="Int NOT NULL")]
		public int MachineID
		{
			get
			{
				return this._MachineID;
			}
			set
			{
				if ((this._MachineID != value))
				{
					this.OnMachineIDChanging(value);
					this.SendPropertyChanging();
					this._MachineID = value;
					this.SendPropertyChanged("MachineID");
					this.OnMachineIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Editor", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Editor
		{
			get
			{
				return this._Editor;
			}
			set
			{
				if ((this._Editor != value))
				{
					this.OnEditorChanging(value);
					this.SendPropertyChanging();
					this._Editor = value;
					this.SendPropertyChanged("Editor");
					this.OnEditorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedUtc", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedUtc
		{
			get
			{
				return this._ModifiedUtc;
			}
			set
			{
				if ((this._ModifiedUtc != value))
				{
					this.OnModifiedUtcChanging(value);
					this.SendPropertyChanging();
					this._ModifiedUtc = value;
					this.SendPropertyChanged("ModifiedUtc");
					this.OnModifiedUtcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false)]
		public System.Data.Linq.Binary RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblB2XCoreResourceHistory")]
	public partial class B2XCoreResourceHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HistoryID;
		
		private long _ResourceID;
		
		private int _ApplicationID;
		
		private string _Name;
		
		private string _Editor;
		
		private System.DateTime _ModifiedUtc;
		
		private System.Data.Linq.Binary _RowVersion;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHistoryIDChanging(int value);
    partial void OnHistoryIDChanged();
    partial void OnResourceIDChanging(long value);
    partial void OnResourceIDChanged();
    partial void OnApplicationIDChanging(int value);
    partial void OnApplicationIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnEditorChanging(string value);
    partial void OnEditorChanged();
    partial void OnModifiedUtcChanging(System.DateTime value);
    partial void OnModifiedUtcChanged();
    partial void OnRowVersionChanging(System.Data.Linq.Binary value);
    partial void OnRowVersionChanged();
    #endregion
		
		public B2XCoreResourceHistory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HistoryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int HistoryID
		{
			get
			{
				return this._HistoryID;
			}
			set
			{
				if ((this._HistoryID != value))
				{
					this.OnHistoryIDChanging(value);
					this.SendPropertyChanging();
					this._HistoryID = value;
					this.SendPropertyChanged("HistoryID");
					this.OnHistoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceID", DbType="BigInt NOT NULL")]
		public long ResourceID
		{
			get
			{
				return this._ResourceID;
			}
			set
			{
				if ((this._ResourceID != value))
				{
					this.OnResourceIDChanging(value);
					this.SendPropertyChanging();
					this._ResourceID = value;
					this.SendPropertyChanged("ResourceID");
					this.OnResourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationID", DbType="Int NOT NULL")]
		public int ApplicationID
		{
			get
			{
				return this._ApplicationID;
			}
			set
			{
				if ((this._ApplicationID != value))
				{
					this.OnApplicationIDChanging(value);
					this.SendPropertyChanging();
					this._ApplicationID = value;
					this.SendPropertyChanged("ApplicationID");
					this.OnApplicationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Editor", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Editor
		{
			get
			{
				return this._Editor;
			}
			set
			{
				if ((this._Editor != value))
				{
					this.OnEditorChanging(value);
					this.SendPropertyChanging();
					this._Editor = value;
					this.SendPropertyChanged("Editor");
					this.OnEditorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedUtc", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedUtc
		{
			get
			{
				return this._ModifiedUtc;
			}
			set
			{
				if ((this._ModifiedUtc != value))
				{
					this.OnModifiedUtcChanging(value);
					this.SendPropertyChanging();
					this._ModifiedUtc = value;
					this.SendPropertyChanged("ModifiedUtc");
					this.OnModifiedUtcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false)]
		public System.Data.Linq.Binary RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblB2XCoreResourceResourceValueHistory")]
	public partial class B2XCoreResourceResourceValueHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HistoryID;
		
		private long _ResourceID;
		
		private int _LanguageID;
		
		private int _ClientID;
		
		private long _ResourceValueID;
		
		private string _Editor;
		
		private System.DateTime _ModifiedUtc;
		
		private System.Data.Linq.Binary _RowVersion;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHistoryIDChanging(int value);
    partial void OnHistoryIDChanged();
    partial void OnResourceIDChanging(long value);
    partial void OnResourceIDChanged();
    partial void OnLanguageIDChanging(int value);
    partial void OnLanguageIDChanged();
    partial void OnClientIDChanging(int value);
    partial void OnClientIDChanged();
    partial void OnResourceValueIDChanging(long value);
    partial void OnResourceValueIDChanged();
    partial void OnEditorChanging(string value);
    partial void OnEditorChanged();
    partial void OnModifiedUtcChanging(System.DateTime value);
    partial void OnModifiedUtcChanged();
    partial void OnRowVersionChanging(System.Data.Linq.Binary value);
    partial void OnRowVersionChanged();
    #endregion
		
		public B2XCoreResourceResourceValueHistory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HistoryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int HistoryID
		{
			get
			{
				return this._HistoryID;
			}
			set
			{
				if ((this._HistoryID != value))
				{
					this.OnHistoryIDChanging(value);
					this.SendPropertyChanging();
					this._HistoryID = value;
					this.SendPropertyChanged("HistoryID");
					this.OnHistoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceID", DbType="BigInt NOT NULL")]
		public long ResourceID
		{
			get
			{
				return this._ResourceID;
			}
			set
			{
				if ((this._ResourceID != value))
				{
					this.OnResourceIDChanging(value);
					this.SendPropertyChanging();
					this._ResourceID = value;
					this.SendPropertyChanged("ResourceID");
					this.OnResourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageID", DbType="Int NOT NULL")]
		public int LanguageID
		{
			get
			{
				return this._LanguageID;
			}
			set
			{
				if ((this._LanguageID != value))
				{
					this.OnLanguageIDChanging(value);
					this.SendPropertyChanging();
					this._LanguageID = value;
					this.SendPropertyChanged("LanguageID");
					this.OnLanguageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="Int NOT NULL")]
		public int ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceValueID", DbType="BigInt NOT NULL")]
		public long ResourceValueID
		{
			get
			{
				return this._ResourceValueID;
			}
			set
			{
				if ((this._ResourceValueID != value))
				{
					this.OnResourceValueIDChanging(value);
					this.SendPropertyChanging();
					this._ResourceValueID = value;
					this.SendPropertyChanged("ResourceValueID");
					this.OnResourceValueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Editor", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Editor
		{
			get
			{
				return this._Editor;
			}
			set
			{
				if ((this._Editor != value))
				{
					this.OnEditorChanging(value);
					this.SendPropertyChanging();
					this._Editor = value;
					this.SendPropertyChanged("Editor");
					this.OnEditorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedUtc", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedUtc
		{
			get
			{
				return this._ModifiedUtc;
			}
			set
			{
				if ((this._ModifiedUtc != value))
				{
					this.OnModifiedUtcChanging(value);
					this.SendPropertyChanging();
					this._ModifiedUtc = value;
					this.SendPropertyChanged("ModifiedUtc");
					this.OnModifiedUtcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false)]
		public System.Data.Linq.Binary RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblB2XCoreResourceValueHistory")]
	public partial class B2XCoreResourceValueHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HistoryID;
		
		private long _ResourceValueID;
		
		private string _Value;
		
		private string _Editor;
		
		private System.DateTime _ModifiedUtc;
		
		private System.Data.Linq.Binary _RowVersion;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHistoryIDChanging(int value);
    partial void OnHistoryIDChanged();
    partial void OnResourceValueIDChanging(long value);
    partial void OnResourceValueIDChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnEditorChanging(string value);
    partial void OnEditorChanged();
    partial void OnModifiedUtcChanging(System.DateTime value);
    partial void OnModifiedUtcChanged();
    partial void OnRowVersionChanging(System.Data.Linq.Binary value);
    partial void OnRowVersionChanged();
    #endregion
		
		public B2XCoreResourceValueHistory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HistoryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int HistoryID
		{
			get
			{
				return this._HistoryID;
			}
			set
			{
				if ((this._HistoryID != value))
				{
					this.OnHistoryIDChanging(value);
					this.SendPropertyChanging();
					this._HistoryID = value;
					this.SendPropertyChanged("HistoryID");
					this.OnHistoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceValueID", DbType="BigInt NOT NULL")]
		public long ResourceValueID
		{
			get
			{
				return this._ResourceValueID;
			}
			set
			{
				if ((this._ResourceValueID != value))
				{
					this.OnResourceValueIDChanging(value);
					this.SendPropertyChanging();
					this._ResourceValueID = value;
					this.SendPropertyChanged("ResourceValueID");
					this.OnResourceValueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Editor", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Editor
		{
			get
			{
				return this._Editor;
			}
			set
			{
				if ((this._Editor != value))
				{
					this.OnEditorChanging(value);
					this.SendPropertyChanging();
					this._Editor = value;
					this.SendPropertyChanged("Editor");
					this.OnEditorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedUtc", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedUtc
		{
			get
			{
				return this._ModifiedUtc;
			}
			set
			{
				if ((this._ModifiedUtc != value))
				{
					this.OnModifiedUtcChanging(value);
					this.SendPropertyChanging();
					this._ModifiedUtc = value;
					this.SendPropertyChanged("ModifiedUtc");
					this.OnModifiedUtcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false)]
		public System.Data.Linq.Binary RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblB2XCoreSettingDefinitionHistory")]
	public partial class B2XCoreSettingDefinitionHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HistoryID;
		
		private int _SettingDefinitionID;
		
		private System.Nullable<int> _ParentSettingDefinitionID;
		
		private System.Guid _UniqueID;
		
		private System.Nullable<System.DateTime> _ChangedUtc;
		
		private string _Editor;
		
		private System.DateTime _ModifiedUtc;
		
		private System.Data.Linq.Binary _RowVersion;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHistoryIDChanging(int value);
    partial void OnHistoryIDChanged();
    partial void OnSettingDefinitionIDChanging(int value);
    partial void OnSettingDefinitionIDChanged();
    partial void OnParentSettingDefinitionIDChanging(System.Nullable<int> value);
    partial void OnParentSettingDefinitionIDChanged();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnChangedUtcChanging(System.Nullable<System.DateTime> value);
    partial void OnChangedUtcChanged();
    partial void OnEditorChanging(string value);
    partial void OnEditorChanged();
    partial void OnModifiedUtcChanging(System.DateTime value);
    partial void OnModifiedUtcChanged();
    partial void OnRowVersionChanging(System.Data.Linq.Binary value);
    partial void OnRowVersionChanged();
    #endregion
		
		public B2XCoreSettingDefinitionHistory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HistoryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int HistoryID
		{
			get
			{
				return this._HistoryID;
			}
			set
			{
				if ((this._HistoryID != value))
				{
					this.OnHistoryIDChanging(value);
					this.SendPropertyChanging();
					this._HistoryID = value;
					this.SendPropertyChanged("HistoryID");
					this.OnHistoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettingDefinitionID", DbType="Int NOT NULL")]
		public int SettingDefinitionID
		{
			get
			{
				return this._SettingDefinitionID;
			}
			set
			{
				if ((this._SettingDefinitionID != value))
				{
					this.OnSettingDefinitionIDChanging(value);
					this.SendPropertyChanging();
					this._SettingDefinitionID = value;
					this.SendPropertyChanged("SettingDefinitionID");
					this.OnSettingDefinitionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentSettingDefinitionID", DbType="Int")]
		public System.Nullable<int> ParentSettingDefinitionID
		{
			get
			{
				return this._ParentSettingDefinitionID;
			}
			set
			{
				if ((this._ParentSettingDefinitionID != value))
				{
					this.OnParentSettingDefinitionIDChanging(value);
					this.SendPropertyChanging();
					this._ParentSettingDefinitionID = value;
					this.SendPropertyChanged("ParentSettingDefinitionID");
					this.OnParentSettingDefinitionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedUtc", DbType="DateTime")]
		public System.Nullable<System.DateTime> ChangedUtc
		{
			get
			{
				return this._ChangedUtc;
			}
			set
			{
				if ((this._ChangedUtc != value))
				{
					this.OnChangedUtcChanging(value);
					this.SendPropertyChanging();
					this._ChangedUtc = value;
					this.SendPropertyChanged("ChangedUtc");
					this.OnChangedUtcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Editor", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Editor
		{
			get
			{
				return this._Editor;
			}
			set
			{
				if ((this._Editor != value))
				{
					this.OnEditorChanging(value);
					this.SendPropertyChanging();
					this._Editor = value;
					this.SendPropertyChanged("Editor");
					this.OnEditorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedUtc", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedUtc
		{
			get
			{
				return this._ModifiedUtc;
			}
			set
			{
				if ((this._ModifiedUtc != value))
				{
					this.OnModifiedUtcChanging(value);
					this.SendPropertyChanging();
					this._ModifiedUtc = value;
					this.SendPropertyChanged("ModifiedUtc");
					this.OnModifiedUtcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false)]
		public System.Data.Linq.Binary RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblB2XCoreSettingHistory")]
	public partial class B2XCoreSettingHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HistoryID;
		
		private int _MachineID;
		
		private int _InstanceID;
		
		private int _ClientID;
		
		private int _SettingDefinitionID;
		
		private string _Arguments;
		
		private string _Value;
		
		private string _Editor;
		
		private System.DateTime _ModifiedUtc;
		
		private System.Data.Linq.Binary _RowVersion;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHistoryIDChanging(int value);
    partial void OnHistoryIDChanged();
    partial void OnMachineIDChanging(int value);
    partial void OnMachineIDChanged();
    partial void OnInstanceIDChanging(int value);
    partial void OnInstanceIDChanged();
    partial void OnClientIDChanging(int value);
    partial void OnClientIDChanged();
    partial void OnSettingDefinitionIDChanging(int value);
    partial void OnSettingDefinitionIDChanged();
    partial void OnArgumentsChanging(string value);
    partial void OnArgumentsChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnEditorChanging(string value);
    partial void OnEditorChanged();
    partial void OnModifiedUtcChanging(System.DateTime value);
    partial void OnModifiedUtcChanged();
    partial void OnRowVersionChanging(System.Data.Linq.Binary value);
    partial void OnRowVersionChanged();
    #endregion
		
		public B2XCoreSettingHistory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HistoryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int HistoryID
		{
			get
			{
				return this._HistoryID;
			}
			set
			{
				if ((this._HistoryID != value))
				{
					this.OnHistoryIDChanging(value);
					this.SendPropertyChanging();
					this._HistoryID = value;
					this.SendPropertyChanged("HistoryID");
					this.OnHistoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MachineID", DbType="Int NOT NULL")]
		public int MachineID
		{
			get
			{
				return this._MachineID;
			}
			set
			{
				if ((this._MachineID != value))
				{
					this.OnMachineIDChanging(value);
					this.SendPropertyChanging();
					this._MachineID = value;
					this.SendPropertyChanged("MachineID");
					this.OnMachineIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstanceID", DbType="Int NOT NULL")]
		public int InstanceID
		{
			get
			{
				return this._InstanceID;
			}
			set
			{
				if ((this._InstanceID != value))
				{
					this.OnInstanceIDChanging(value);
					this.SendPropertyChanging();
					this._InstanceID = value;
					this.SendPropertyChanged("InstanceID");
					this.OnInstanceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="Int NOT NULL")]
		public int ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettingDefinitionID", DbType="Int NOT NULL")]
		public int SettingDefinitionID
		{
			get
			{
				return this._SettingDefinitionID;
			}
			set
			{
				if ((this._SettingDefinitionID != value))
				{
					this.OnSettingDefinitionIDChanging(value);
					this.SendPropertyChanging();
					this._SettingDefinitionID = value;
					this.SendPropertyChanged("SettingDefinitionID");
					this.OnSettingDefinitionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Arguments", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Arguments
		{
			get
			{
				return this._Arguments;
			}
			set
			{
				if ((this._Arguments != value))
				{
					this.OnArgumentsChanging(value);
					this.SendPropertyChanging();
					this._Arguments = value;
					this.SendPropertyChanged("Arguments");
					this.OnArgumentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Editor", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Editor
		{
			get
			{
				return this._Editor;
			}
			set
			{
				if ((this._Editor != value))
				{
					this.OnEditorChanging(value);
					this.SendPropertyChanging();
					this._Editor = value;
					this.SendPropertyChanged("Editor");
					this.OnEditorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedUtc", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedUtc
		{
			get
			{
				return this._ModifiedUtc;
			}
			set
			{
				if ((this._ModifiedUtc != value))
				{
					this.OnModifiedUtcChanging(value);
					this.SendPropertyChanging();
					this._ModifiedUtc = value;
					this.SendPropertyChanged("ModifiedUtc");
					this.OnModifiedUtcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false)]
		public System.Data.Linq.Binary RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblB2XCoreUserDomainResourceHistory")]
	public partial class B2XCoreUserDomainResourceHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HistoryID;
		
		private int _UserID;
		
		private int _DomainResourceID;
		
		private string _Editor;
		
		private System.DateTime _ModifiedUtc;
		
		private System.Data.Linq.Binary _RowVersion;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHistoryIDChanging(int value);
    partial void OnHistoryIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnDomainResourceIDChanging(int value);
    partial void OnDomainResourceIDChanged();
    partial void OnEditorChanging(string value);
    partial void OnEditorChanged();
    partial void OnModifiedUtcChanging(System.DateTime value);
    partial void OnModifiedUtcChanged();
    partial void OnRowVersionChanging(System.Data.Linq.Binary value);
    partial void OnRowVersionChanged();
    #endregion
		
		public B2XCoreUserDomainResourceHistory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HistoryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int HistoryID
		{
			get
			{
				return this._HistoryID;
			}
			set
			{
				if ((this._HistoryID != value))
				{
					this.OnHistoryIDChanging(value);
					this.SendPropertyChanging();
					this._HistoryID = value;
					this.SendPropertyChanged("HistoryID");
					this.OnHistoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DomainResourceID", DbType="Int NOT NULL")]
		public int DomainResourceID
		{
			get
			{
				return this._DomainResourceID;
			}
			set
			{
				if ((this._DomainResourceID != value))
				{
					this.OnDomainResourceIDChanging(value);
					this.SendPropertyChanging();
					this._DomainResourceID = value;
					this.SendPropertyChanged("DomainResourceID");
					this.OnDomainResourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Editor", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Editor
		{
			get
			{
				return this._Editor;
			}
			set
			{
				if ((this._Editor != value))
				{
					this.OnEditorChanging(value);
					this.SendPropertyChanging();
					this._Editor = value;
					this.SendPropertyChanged("Editor");
					this.OnEditorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedUtc", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedUtc
		{
			get
			{
				return this._ModifiedUtc;
			}
			set
			{
				if ((this._ModifiedUtc != value))
				{
					this.OnModifiedUtcChanging(value);
					this.SendPropertyChanging();
					this._ModifiedUtc = value;
					this.SendPropertyChanged("ModifiedUtc");
					this.OnModifiedUtcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false)]
		public System.Data.Linq.Binary RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblB2XCoreUserGroupHistory")]
	public partial class B2XCoreUserGroupHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HistoryID;
		
		private int _UserID;
		
		private int _GroupID;
		
		private bool _IsEnabled;
		
		private string _Editor;
		
		private System.DateTime _ModifiedUtc;
		
		private System.Data.Linq.Binary _RowVersion;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHistoryIDChanging(int value);
    partial void OnHistoryIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnGroupIDChanging(int value);
    partial void OnGroupIDChanged();
    partial void OnIsEnabledChanging(bool value);
    partial void OnIsEnabledChanged();
    partial void OnEditorChanging(string value);
    partial void OnEditorChanged();
    partial void OnModifiedUtcChanging(System.DateTime value);
    partial void OnModifiedUtcChanged();
    partial void OnRowVersionChanging(System.Data.Linq.Binary value);
    partial void OnRowVersionChanged();
    #endregion
		
		public B2XCoreUserGroupHistory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HistoryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int HistoryID
		{
			get
			{
				return this._HistoryID;
			}
			set
			{
				if ((this._HistoryID != value))
				{
					this.OnHistoryIDChanging(value);
					this.SendPropertyChanging();
					this._HistoryID = value;
					this.SendPropertyChanged("HistoryID");
					this.OnHistoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="Int NOT NULL")]
		public int GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEnabled", DbType="Bit NOT NULL")]
		public bool IsEnabled
		{
			get
			{
				return this._IsEnabled;
			}
			set
			{
				if ((this._IsEnabled != value))
				{
					this.OnIsEnabledChanging(value);
					this.SendPropertyChanging();
					this._IsEnabled = value;
					this.SendPropertyChanged("IsEnabled");
					this.OnIsEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Editor", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Editor
		{
			get
			{
				return this._Editor;
			}
			set
			{
				if ((this._Editor != value))
				{
					this.OnEditorChanging(value);
					this.SendPropertyChanging();
					this._Editor = value;
					this.SendPropertyChanged("Editor");
					this.OnEditorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedUtc", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedUtc
		{
			get
			{
				return this._ModifiedUtc;
			}
			set
			{
				if ((this._ModifiedUtc != value))
				{
					this.OnModifiedUtcChanging(value);
					this.SendPropertyChanging();
					this._ModifiedUtc = value;
					this.SendPropertyChanged("ModifiedUtc");
					this.OnModifiedUtcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false)]
		public System.Data.Linq.Binary RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblB2XCoreUserHistory")]
	public partial class B2XCoreUserHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HistoryID;
		
		private int _UserID;
		
		private string _UserName;
		
		private string _LastName;
		
		private string _FirstName;
		
		private string _Email;
		
		private string _PasswordHash;
		
		private string _PasswordSalt;
		
		private System.Nullable<System.DateTime> _LastPasswordChangedUtc;
		
		private bool _IsApproved;
		
		private bool _IsLockedOut;
		
		private System.Nullable<System.DateTime> _LastLockoutUtc;
		
		private int _FailedPasswordAttempt;
		
		private System.Nullable<System.DateTime> _LastFailedPasswordAttemptUtc;
		
		private string _SecureKey;
		
		private bool _IsEnabled;
		
		private string _Editor;
		
		private System.DateTime _ModifiedUtc;
		
		private System.Nullable<System.DateTime> _LastFieldUpdateUtc;
		
		private string _PreferredUserName;
		
		private int _AuthenticationType;
		
		private bool _AllowAutoLogin;
		
		private System.Nullable<int> _DomainID;
		
		private System.Data.Linq.Binary _RowVersion;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHistoryIDChanging(int value);
    partial void OnHistoryIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPasswordHashChanging(string value);
    partial void OnPasswordHashChanged();
    partial void OnPasswordSaltChanging(string value);
    partial void OnPasswordSaltChanged();
    partial void OnLastPasswordChangedUtcChanging(System.Nullable<System.DateTime> value);
    partial void OnLastPasswordChangedUtcChanged();
    partial void OnIsApprovedChanging(bool value);
    partial void OnIsApprovedChanged();
    partial void OnIsLockedOutChanging(bool value);
    partial void OnIsLockedOutChanged();
    partial void OnLastLockoutUtcChanging(System.Nullable<System.DateTime> value);
    partial void OnLastLockoutUtcChanged();
    partial void OnFailedPasswordAttemptChanging(int value);
    partial void OnFailedPasswordAttemptChanged();
    partial void OnLastFailedPasswordAttemptUtcChanging(System.Nullable<System.DateTime> value);
    partial void OnLastFailedPasswordAttemptUtcChanged();
    partial void OnSecureKeyChanging(string value);
    partial void OnSecureKeyChanged();
    partial void OnIsEnabledChanging(bool value);
    partial void OnIsEnabledChanged();
    partial void OnEditorChanging(string value);
    partial void OnEditorChanged();
    partial void OnModifiedUtcChanging(System.DateTime value);
    partial void OnModifiedUtcChanged();
    partial void OnLastFieldUpdateUtcChanging(System.Nullable<System.DateTime> value);
    partial void OnLastFieldUpdateUtcChanged();
    partial void OnPreferredUserNameChanging(string value);
    partial void OnPreferredUserNameChanged();
    partial void OnAuthenticationTypeChanging(int value);
    partial void OnAuthenticationTypeChanged();
    partial void OnAllowAutoLoginChanging(bool value);
    partial void OnAllowAutoLoginChanged();
    partial void OnDomainIDChanging(System.Nullable<int> value);
    partial void OnDomainIDChanged();
    partial void OnRowVersionChanging(System.Data.Linq.Binary value);
    partial void OnRowVersionChanged();
    #endregion
		
		public B2XCoreUserHistory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HistoryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int HistoryID
		{
			get
			{
				return this._HistoryID;
			}
			set
			{
				if ((this._HistoryID != value))
				{
					this.OnHistoryIDChanging(value);
					this.SendPropertyChanging();
					this._HistoryID = value;
					this.SendPropertyChanged("HistoryID");
					this.OnHistoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordHash", DbType="NChar(256)")]
		public string PasswordHash
		{
			get
			{
				return this._PasswordHash;
			}
			set
			{
				if ((this._PasswordHash != value))
				{
					this.OnPasswordHashChanging(value);
					this.SendPropertyChanging();
					this._PasswordHash = value;
					this.SendPropertyChanged("PasswordHash");
					this.OnPasswordHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordSalt", DbType="NVarChar(MAX)")]
		public string PasswordSalt
		{
			get
			{
				return this._PasswordSalt;
			}
			set
			{
				if ((this._PasswordSalt != value))
				{
					this.OnPasswordSaltChanging(value);
					this.SendPropertyChanging();
					this._PasswordSalt = value;
					this.SendPropertyChanged("PasswordSalt");
					this.OnPasswordSaltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPasswordChangedUtc", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastPasswordChangedUtc
		{
			get
			{
				return this._LastPasswordChangedUtc;
			}
			set
			{
				if ((this._LastPasswordChangedUtc != value))
				{
					this.OnLastPasswordChangedUtcChanging(value);
					this.SendPropertyChanging();
					this._LastPasswordChangedUtc = value;
					this.SendPropertyChanged("LastPasswordChangedUtc");
					this.OnLastPasswordChangedUtcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApproved", DbType="Bit NOT NULL")]
		public bool IsApproved
		{
			get
			{
				return this._IsApproved;
			}
			set
			{
				if ((this._IsApproved != value))
				{
					this.OnIsApprovedChanging(value);
					this.SendPropertyChanging();
					this._IsApproved = value;
					this.SendPropertyChanged("IsApproved");
					this.OnIsApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLockedOut", DbType="Bit NOT NULL")]
		public bool IsLockedOut
		{
			get
			{
				return this._IsLockedOut;
			}
			set
			{
				if ((this._IsLockedOut != value))
				{
					this.OnIsLockedOutChanging(value);
					this.SendPropertyChanging();
					this._IsLockedOut = value;
					this.SendPropertyChanged("IsLockedOut");
					this.OnIsLockedOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLockoutUtc", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastLockoutUtc
		{
			get
			{
				return this._LastLockoutUtc;
			}
			set
			{
				if ((this._LastLockoutUtc != value))
				{
					this.OnLastLockoutUtcChanging(value);
					this.SendPropertyChanging();
					this._LastLockoutUtc = value;
					this.SendPropertyChanged("LastLockoutUtc");
					this.OnLastLockoutUtcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttempt", DbType="Int NOT NULL")]
		public int FailedPasswordAttempt
		{
			get
			{
				return this._FailedPasswordAttempt;
			}
			set
			{
				if ((this._FailedPasswordAttempt != value))
				{
					this.OnFailedPasswordAttemptChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttempt = value;
					this.SendPropertyChanged("FailedPasswordAttempt");
					this.OnFailedPasswordAttemptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastFailedPasswordAttemptUtc", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastFailedPasswordAttemptUtc
		{
			get
			{
				return this._LastFailedPasswordAttemptUtc;
			}
			set
			{
				if ((this._LastFailedPasswordAttemptUtc != value))
				{
					this.OnLastFailedPasswordAttemptUtcChanging(value);
					this.SendPropertyChanging();
					this._LastFailedPasswordAttemptUtc = value;
					this.SendPropertyChanged("LastFailedPasswordAttemptUtc");
					this.OnLastFailedPasswordAttemptUtcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecureKey", DbType="NVarChar(32)")]
		public string SecureKey
		{
			get
			{
				return this._SecureKey;
			}
			set
			{
				if ((this._SecureKey != value))
				{
					this.OnSecureKeyChanging(value);
					this.SendPropertyChanging();
					this._SecureKey = value;
					this.SendPropertyChanged("SecureKey");
					this.OnSecureKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEnabled", DbType="Bit NOT NULL")]
		public bool IsEnabled
		{
			get
			{
				return this._IsEnabled;
			}
			set
			{
				if ((this._IsEnabled != value))
				{
					this.OnIsEnabledChanging(value);
					this.SendPropertyChanging();
					this._IsEnabled = value;
					this.SendPropertyChanged("IsEnabled");
					this.OnIsEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Editor", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Editor
		{
			get
			{
				return this._Editor;
			}
			set
			{
				if ((this._Editor != value))
				{
					this.OnEditorChanging(value);
					this.SendPropertyChanging();
					this._Editor = value;
					this.SendPropertyChanged("Editor");
					this.OnEditorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedUtc", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedUtc
		{
			get
			{
				return this._ModifiedUtc;
			}
			set
			{
				if ((this._ModifiedUtc != value))
				{
					this.OnModifiedUtcChanging(value);
					this.SendPropertyChanging();
					this._ModifiedUtc = value;
					this.SendPropertyChanged("ModifiedUtc");
					this.OnModifiedUtcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastFieldUpdateUtc", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastFieldUpdateUtc
		{
			get
			{
				return this._LastFieldUpdateUtc;
			}
			set
			{
				if ((this._LastFieldUpdateUtc != value))
				{
					this.OnLastFieldUpdateUtcChanging(value);
					this.SendPropertyChanging();
					this._LastFieldUpdateUtc = value;
					this.SendPropertyChanged("LastFieldUpdateUtc");
					this.OnLastFieldUpdateUtcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreferredUserName", DbType="NVarChar(50)")]
		public string PreferredUserName
		{
			get
			{
				return this._PreferredUserName;
			}
			set
			{
				if ((this._PreferredUserName != value))
				{
					this.OnPreferredUserNameChanging(value);
					this.SendPropertyChanging();
					this._PreferredUserName = value;
					this.SendPropertyChanged("PreferredUserName");
					this.OnPreferredUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthenticationType", DbType="Int NOT NULL")]
		public int AuthenticationType
		{
			get
			{
				return this._AuthenticationType;
			}
			set
			{
				if ((this._AuthenticationType != value))
				{
					this.OnAuthenticationTypeChanging(value);
					this.SendPropertyChanging();
					this._AuthenticationType = value;
					this.SendPropertyChanged("AuthenticationType");
					this.OnAuthenticationTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowAutoLogin", DbType="Bit NOT NULL")]
		public bool AllowAutoLogin
		{
			get
			{
				return this._AllowAutoLogin;
			}
			set
			{
				if ((this._AllowAutoLogin != value))
				{
					this.OnAllowAutoLoginChanging(value);
					this.SendPropertyChanging();
					this._AllowAutoLogin = value;
					this.SendPropertyChanged("AllowAutoLogin");
					this.OnAllowAutoLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DomainID", DbType="Int")]
		public System.Nullable<int> DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					this.OnDomainIDChanging(value);
					this.SendPropertyChanging();
					this._DomainID = value;
					this.SendPropertyChanged("DomainID");
					this.OnDomainIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false)]
		public System.Data.Linq.Binary RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblB2XCoreUserPropertyDefinitionHistory")]
	public partial class B2XCoreUserPropertyDefinitionHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HistoryID;
		
		private int _UserPropertyDefinitionID;
		
		private string _Key;
		
		private string _Value;
		
		private bool _IsPublic;
		
		private bool _AddOnUserCreation;
		
		private string _Description;
		
		private bool _IsEnabled;
		
		private string _Editor;
		
		private System.DateTime _ModifiedUtc;
		
		private System.Data.Linq.Binary _RowVersion;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHistoryIDChanging(int value);
    partial void OnHistoryIDChanged();
    partial void OnUserPropertyDefinitionIDChanging(int value);
    partial void OnUserPropertyDefinitionIDChanged();
    partial void OnKeyChanging(string value);
    partial void OnKeyChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnIsPublicChanging(bool value);
    partial void OnIsPublicChanged();
    partial void OnAddOnUserCreationChanging(bool value);
    partial void OnAddOnUserCreationChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsEnabledChanging(bool value);
    partial void OnIsEnabledChanged();
    partial void OnEditorChanging(string value);
    partial void OnEditorChanged();
    partial void OnModifiedUtcChanging(System.DateTime value);
    partial void OnModifiedUtcChanged();
    partial void OnRowVersionChanging(System.Data.Linq.Binary value);
    partial void OnRowVersionChanged();
    #endregion
		
		public B2XCoreUserPropertyDefinitionHistory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HistoryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int HistoryID
		{
			get
			{
				return this._HistoryID;
			}
			set
			{
				if ((this._HistoryID != value))
				{
					this.OnHistoryIDChanging(value);
					this.SendPropertyChanging();
					this._HistoryID = value;
					this.SendPropertyChanged("HistoryID");
					this.OnHistoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserPropertyDefinitionID", DbType="Int NOT NULL")]
		public int UserPropertyDefinitionID
		{
			get
			{
				return this._UserPropertyDefinitionID;
			}
			set
			{
				if ((this._UserPropertyDefinitionID != value))
				{
					this.OnUserPropertyDefinitionIDChanging(value);
					this.SendPropertyChanging();
					this._UserPropertyDefinitionID = value;
					this.SendPropertyChanged("UserPropertyDefinitionID");
					this.OnUserPropertyDefinitionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Key]", Storage="_Key", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(250)")]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPublic", DbType="Bit NOT NULL")]
		public bool IsPublic
		{
			get
			{
				return this._IsPublic;
			}
			set
			{
				if ((this._IsPublic != value))
				{
					this.OnIsPublicChanging(value);
					this.SendPropertyChanging();
					this._IsPublic = value;
					this.SendPropertyChanged("IsPublic");
					this.OnIsPublicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddOnUserCreation", DbType="Bit NOT NULL")]
		public bool AddOnUserCreation
		{
			get
			{
				return this._AddOnUserCreation;
			}
			set
			{
				if ((this._AddOnUserCreation != value))
				{
					this.OnAddOnUserCreationChanging(value);
					this.SendPropertyChanging();
					this._AddOnUserCreation = value;
					this.SendPropertyChanged("AddOnUserCreation");
					this.OnAddOnUserCreationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(250)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEnabled", DbType="Bit NOT NULL")]
		public bool IsEnabled
		{
			get
			{
				return this._IsEnabled;
			}
			set
			{
				if ((this._IsEnabled != value))
				{
					this.OnIsEnabledChanging(value);
					this.SendPropertyChanging();
					this._IsEnabled = value;
					this.SendPropertyChanged("IsEnabled");
					this.OnIsEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Editor", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Editor
		{
			get
			{
				return this._Editor;
			}
			set
			{
				if ((this._Editor != value))
				{
					this.OnEditorChanging(value);
					this.SendPropertyChanging();
					this._Editor = value;
					this.SendPropertyChanged("Editor");
					this.OnEditorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedUtc", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedUtc
		{
			get
			{
				return this._ModifiedUtc;
			}
			set
			{
				if ((this._ModifiedUtc != value))
				{
					this.OnModifiedUtcChanging(value);
					this.SendPropertyChanging();
					this._ModifiedUtc = value;
					this.SendPropertyChanged("ModifiedUtc");
					this.OnModifiedUtcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false)]
		public System.Data.Linq.Binary RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblB2XCoreUserPropertyHistory")]
	public partial class B2XCoreUserPropertyHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HistoryID;
		
		private int _UserID;
		
		private int _UserPropertyDefinitionID;
		
		private string _Value;
		
		private bool _IsPublic;
		
		private bool _IsEnabled;
		
		private string _Editor;
		
		private System.DateTime _ModifiedUtc;
		
		private System.Data.Linq.Binary _RowVersion;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHistoryIDChanging(int value);
    partial void OnHistoryIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnUserPropertyDefinitionIDChanging(int value);
    partial void OnUserPropertyDefinitionIDChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnIsPublicChanging(bool value);
    partial void OnIsPublicChanged();
    partial void OnIsEnabledChanging(bool value);
    partial void OnIsEnabledChanged();
    partial void OnEditorChanging(string value);
    partial void OnEditorChanged();
    partial void OnModifiedUtcChanging(System.DateTime value);
    partial void OnModifiedUtcChanged();
    partial void OnRowVersionChanging(System.Data.Linq.Binary value);
    partial void OnRowVersionChanged();
    #endregion
		
		public B2XCoreUserPropertyHistory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HistoryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int HistoryID
		{
			get
			{
				return this._HistoryID;
			}
			set
			{
				if ((this._HistoryID != value))
				{
					this.OnHistoryIDChanging(value);
					this.SendPropertyChanging();
					this._HistoryID = value;
					this.SendPropertyChanged("HistoryID");
					this.OnHistoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserPropertyDefinitionID", DbType="Int NOT NULL")]
		public int UserPropertyDefinitionID
		{
			get
			{
				return this._UserPropertyDefinitionID;
			}
			set
			{
				if ((this._UserPropertyDefinitionID != value))
				{
					this.OnUserPropertyDefinitionIDChanging(value);
					this.SendPropertyChanging();
					this._UserPropertyDefinitionID = value;
					this.SendPropertyChanged("UserPropertyDefinitionID");
					this.OnUserPropertyDefinitionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPublic", DbType="Bit NOT NULL")]
		public bool IsPublic
		{
			get
			{
				return this._IsPublic;
			}
			set
			{
				if ((this._IsPublic != value))
				{
					this.OnIsPublicChanging(value);
					this.SendPropertyChanging();
					this._IsPublic = value;
					this.SendPropertyChanged("IsPublic");
					this.OnIsPublicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEnabled", DbType="Bit NOT NULL")]
		public bool IsEnabled
		{
			get
			{
				return this._IsEnabled;
			}
			set
			{
				if ((this._IsEnabled != value))
				{
					this.OnIsEnabledChanging(value);
					this.SendPropertyChanging();
					this._IsEnabled = value;
					this.SendPropertyChanged("IsEnabled");
					this.OnIsEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Editor", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Editor
		{
			get
			{
				return this._Editor;
			}
			set
			{
				if ((this._Editor != value))
				{
					this.OnEditorChanging(value);
					this.SendPropertyChanging();
					this._Editor = value;
					this.SendPropertyChanged("Editor");
					this.OnEditorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedUtc", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedUtc
		{
			get
			{
				return this._ModifiedUtc;
			}
			set
			{
				if ((this._ModifiedUtc != value))
				{
					this.OnModifiedUtcChanging(value);
					this.SendPropertyChanging();
					this._ModifiedUtc = value;
					this.SendPropertyChanged("ModifiedUtc");
					this.OnModifiedUtcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false)]
		public System.Data.Linq.Binary RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblB2XCoreTimeZoneHistory")]
	public partial class B2XCoreTimeZoneHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HistoryID;
		
		private int _TimeZoneID;
		
		private string _Key;
		
		private string _DisplayName;
		
		private string _StandardName;
		
		private string _DaylightName;
		
		private decimal _BaseUtcOffset;
		
		private bool _SupportsDaylightSavingTime;
		
		private System.DateTime _ModifiedUtc;
		
		private string _Editor;
		
		private System.Data.Linq.Binary _RowVersion;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHistoryIDChanging(int value);
    partial void OnHistoryIDChanged();
    partial void OnTimeZoneIDChanging(int value);
    partial void OnTimeZoneIDChanged();
    partial void OnKeyChanging(string value);
    partial void OnKeyChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnStandardNameChanging(string value);
    partial void OnStandardNameChanged();
    partial void OnDaylightNameChanging(string value);
    partial void OnDaylightNameChanged();
    partial void OnBaseUtcOffsetChanging(decimal value);
    partial void OnBaseUtcOffsetChanged();
    partial void OnSupportsDaylightSavingTimeChanging(bool value);
    partial void OnSupportsDaylightSavingTimeChanged();
    partial void OnModifiedUtcChanging(System.DateTime value);
    partial void OnModifiedUtcChanged();
    partial void OnEditorChanging(string value);
    partial void OnEditorChanged();
    partial void OnRowVersionChanging(System.Data.Linq.Binary value);
    partial void OnRowVersionChanged();
    #endregion
		
		public B2XCoreTimeZoneHistory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HistoryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int HistoryID
		{
			get
			{
				return this._HistoryID;
			}
			set
			{
				if ((this._HistoryID != value))
				{
					this.OnHistoryIDChanging(value);
					this.SendPropertyChanging();
					this._HistoryID = value;
					this.SendPropertyChanged("HistoryID");
					this.OnHistoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeZoneID", DbType="Int NOT NULL")]
		public int TimeZoneID
		{
			get
			{
				return this._TimeZoneID;
			}
			set
			{
				if ((this._TimeZoneID != value))
				{
					this.OnTimeZoneIDChanging(value);
					this.SendPropertyChanging();
					this._TimeZoneID = value;
					this.SendPropertyChanged("TimeZoneID");
					this.OnTimeZoneIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Key]", Storage="_Key", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StandardName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string StandardName
		{
			get
			{
				return this._StandardName;
			}
			set
			{
				if ((this._StandardName != value))
				{
					this.OnStandardNameChanging(value);
					this.SendPropertyChanging();
					this._StandardName = value;
					this.SendPropertyChanged("StandardName");
					this.OnStandardNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaylightName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string DaylightName
		{
			get
			{
				return this._DaylightName;
			}
			set
			{
				if ((this._DaylightName != value))
				{
					this.OnDaylightNameChanging(value);
					this.SendPropertyChanging();
					this._DaylightName = value;
					this.SendPropertyChanged("DaylightName");
					this.OnDaylightNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseUtcOffset", DbType="Decimal NOT NULL")]
		public decimal BaseUtcOffset
		{
			get
			{
				return this._BaseUtcOffset;
			}
			set
			{
				if ((this._BaseUtcOffset != value))
				{
					this.OnBaseUtcOffsetChanging(value);
					this.SendPropertyChanging();
					this._BaseUtcOffset = value;
					this.SendPropertyChanged("BaseUtcOffset");
					this.OnBaseUtcOffsetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupportsDaylightSavingTime", DbType="Bit NOT NULL")]
		public bool SupportsDaylightSavingTime
		{
			get
			{
				return this._SupportsDaylightSavingTime;
			}
			set
			{
				if ((this._SupportsDaylightSavingTime != value))
				{
					this.OnSupportsDaylightSavingTimeChanging(value);
					this.SendPropertyChanging();
					this._SupportsDaylightSavingTime = value;
					this.SendPropertyChanged("SupportsDaylightSavingTime");
					this.OnSupportsDaylightSavingTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedUtc", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedUtc
		{
			get
			{
				return this._ModifiedUtc;
			}
			set
			{
				if ((this._ModifiedUtc != value))
				{
					this.OnModifiedUtcChanging(value);
					this.SendPropertyChanging();
					this._ModifiedUtc = value;
					this.SendPropertyChanged("ModifiedUtc");
					this.OnModifiedUtcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Editor", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Editor
		{
			get
			{
				return this._Editor;
			}
			set
			{
				if ((this._Editor != value))
				{
					this.OnEditorChanging(value);
					this.SendPropertyChanging();
					this._Editor = value;
					this.SendPropertyChanged("Editor");
					this.OnEditorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowVersion", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false)]
		public System.Data.Linq.Binary RowVersion
		{
			get
			{
				return this._RowVersion;
			}
			set
			{
				if ((this._RowVersion != value))
				{
					this.OnRowVersionChanging(value);
					this.SendPropertyChanging();
					this._RowVersion = value;
					this.SendPropertyChanged("RowVersion");
					this.OnRowVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
